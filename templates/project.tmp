<script src="js/project.js"></script>
<script src="js/inplace.js"></script>
<link rel="stylesheet" href="style/project.css">

<div hidden class="project big">
    <div class="title">
        <h1></h1>
    </div>
    <div class="viewer pure-g">
        <!-- Project viewer -->
        <div class="embed pure-u-1-2">
            <div class="controlbar">
                <i class="present-button fas fa-expand clickable" onclick="toggleFullScreen();"></i>
                <i class="start-button fas fa-flag clickable" onclick="runProject();"></i>
                <i class="stop-button fas fa-stop clickable" onclick="stopProject();"></i>
            </div>
            <iframe height="406" src=""> </iframe>
        </div>

        <i class="pure-u-1-24"></i>
        <div class="details pure-u-11-24">

            <!-- Notes -->
            <pre class="notes"> </pre>

            <!-- Project Action Buttons -->
            <div class="buttons">
                <a localizable class="pure-button open" target="_blank">Edit</a>
                <a localizable class="pure-button download" target="_blank">Download</a>
                <a localizable class="pure-button share" target="_blank">Share</a>
                <a localizable class="pure-button unshare" target="_blank">Unshare</a>
                <a localizable class="pure-button publish" target="_blank">Publish</a>
                <a localizable class="pure-button unpublish" target="_blank">Unpublish</a>
                <a localizable class="pure-button pure-button-warning delete" target="_blank">Delete</a>
            </div>
        </div>

        <!-- Dates and project meta -->
        <span class="dates pure-u-1-2">
            <span localizable class="created">Created on </span>.
            <span localizable class="updated">Last updated on </span><span localizable class="shared">, shared on </span><span localizable class="published"></span>.
            <span localizable class="is-public">This project is </span><span localizable class="is-published"></span>.
        </span>
    </div>
</div>

<script>
    beganLoading('#wrapper');
    SnapCloud.getProjectMetadata(
        pageProject(),
        pageUser(),
        function (project) {
            setTitle(pageProject() + localizer.localize(' by ') + pageUser() + ' - Snap! Build Your Own Blocks');

            // Fill up all fields
            var title = document.querySelector('.title h1');
            title.innerHTML = project.projectname;
            if (ownsProject(project)) {
                new InPlaceEditor(
                    title,
                    function () {
                        SnapCloud.updateProjectName(
                            pageProject(),
                            title.textContent,
                            function () { location.href = 'project.html?user=' + pageUser() + '&project=' + title.textContent; },
                            genericError
                        );
                    })
            }
            document.querySelector('.title').append(authorSpan(project.username));
            document.querySelector('.project iframe').src = projectURL(project.username, project.projectname) + '&embedMode&noExitWarning&noRun';
            document.querySelector('.notes').innerHTML = project.notes || '<small>' + localizer.localize('This project has no notes') + '</small>';
            document.querySelector('.created').append(formatDate(project.created));
            document.querySelector('.updated').append(formatDate(project.lastupdated));

            if (project.ispublic) {
                document.querySelector('.shared').append(formatDate(project.lastshared));
                document.querySelector('.is-published').innerHTML += (project.ispublished ? ' and listed' : ' but unlisted');
                if (project.ispublished) {
                    document.querySelector('.published').innerHTML = localizer.localize(', published on ') + formatDate(project.firstpublished);
                }
                document.querySelector('.is-public').innerHTML += ('public');
            } else {
                document.querySelector('.shared').hidden = true;
                document.querySelector('.is-public').append('private');
            }

            // Set up all buttons
            document.querySelector('.buttons .share').hidden = project.ispublic || !ownsProject(project);
            document.querySelector('.buttons .unshare').hidden = !project.ispublic || !ownsProject(project);
            document.querySelector('.buttons .publish').hidden = (!project.ispublic || project.ispublished) || !ownsProject(project);
            document.querySelector('.buttons .unpublish').hidden = (!project.ispublic || !project.ispublished) || !ownsProject(project);
            document.querySelector('.buttons .delete').hidden = !ownsProject(project);

            document.querySelector('.buttons .open').href = projectURL(project.username, project.projectname) + '&editMode&noRun';
            document.querySelector('.buttons .download').onclick = function () { downloadProject(project); };
            document.querySelector('.buttons .share').onclick = function () { confirmShareProject(project); };
            document.querySelector('.buttons .unshare').onclick = function () { confirmUnshareProject(project); };
            document.querySelector('.buttons .publish').onclick = function () { confirmPublish(project); };
            document.querySelector('.buttons .unpublish').onclick = function () { confirmUnpublish(project); }
            document.querySelector('.buttons .delete').onclick = function () { confirmDelete(project); }

            doneLoading('#wrapper');
            document.querySelector('.project').hidden = false;

            // In-place notes editor
            var notes = document.querySelector('.notes');
            if (ownsProject(project)) {
                new InPlaceEditor(
                    notes,
                    function () {
                        SnapCloud.updateNotes(
                            pageProject(),
                            notes.textContent,
                            function () {
                                if (notes.textContent == '') {
                                    notes.innerHTML = '<small>' + localizer.localize('This project has no notes') + '</small>';
                                }
                            }, 
                            genericError
                        );
                    }
                );
            } 
        },
        genericError
    );

</script>
