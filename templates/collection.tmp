@param title="collectionName + ' - Snap! Build Your Own Blocks'"
<script src="js/dialog.js"></script>
<script src="js/project.js"></script>
<script src="js/inplace.js"></script>
<link rel="stylesheet" href="style/project.css">
<div hidden class="collection">
    <div class="title">
        <h1></h1>
    </div>
    <div class="contents pure-g">
        <div class="pure-u-7-24 info">
            <div class="pure-g">

                <div class="pure-u-1-2 thumbnail-container"><img
                    class="collection-thumbnail"/></div>

                <div class="pure-u-1-2 dates">
                    <p class="created"><strong
                        localizable>Created:</strong><span></span></p>
                    <p class="updated"><strong
                        localizable>Last updated:</strong><span></span></p>
                    <p class="shared"><strong
                        localizable>Shared:</strong><span></span></p>
                    <p class="published"><strong
                        localizable>Published:</strong><span></span></p>
                </div>
            </div>

            <pre class="description"></pre>

            <div class="editors">
                <ul class="editor-list"></ul>
                <a class="clickable add-editor"><i
                        class="fas fa-plus-circle"></i></a>
                <input hidden class="new-editor"></input>
            </div>

            <div class="buttons">
                <a localizable class="pure-button share"
                    target="_blank">Share</a>
                <a localizable class="pure-button unshare"
                    target="_blank">Unshare</a>
                <a localizable class="pure-button publish"
                    target="_blank">Publish</a>
                <a localizable class="pure-button unpublish"
                    target="_blank">Unpublish</a>
                <a localizable class="pure-button pure-button-warning delete"
                    target="_blank">Delete</a>
            </div>

        </div>
        <!-- just a separator -->
        <i class="pure-u-1-24"></i>
        <div class="pure-u-2-3 projects">

@param pageSize=12
@param widgetName="collection_projects"
@include=grid
        <script>
            collection_projects_loadPage =
                function (query, pageSize, pageNumber, onSuccess) {
                    SnapCloud.getCollectionProjects(
                        getUrlParameter('user'),
                        pageNumber,
                        pageSize,
                        getUrlParameter('collection'),
                        onSuccess,
                        genericError,
                        true // withThumbnail
                    );
                };

            collection_projects_onLoadPage =
                function (response, targetElement) {
                    response.projects.forEach(function (project) {
                        targetElement.append(
                            newProjectDiv(
                                project, 
                                { 
                                    size: 'small', 
                                    gridSize: 4, 
                                    extraFields: {
                                        isPublic: 'ispublic',
                                        isPublished: 'ispublished',
                                        author: 'username'
                                    },
                                    withCollectionControls: true
                                }
                            )
                        );
                    }); 
                };

            collection_projects_initGrid();
        </script>

        </div>
    </div>
</div>
<script>
    beganLoading('#wrapper');

    SnapCloud.getCollectionMetadata(
        pageUser(),
        '${collectionName}' || getUrlParameter('collection'),
        function (collection) {
            if (collection.id == 0) {
                // "Flagged" collection
                document.querySelector('.info').remove();
                document.querySelector('.contents').classList.remove('pure-g');
                document.querySelector('.projects').classList
                    .remove('pure-u-2-3');
                document.querySelector('.collection').classList.add('flagged');
            }

            fillCollectionTitle(
                    collection,
                    document.querySelector('.title')
                );

            if (collection.id !== 0) { 
                fillCollectionThumbnail(
                    collection,
                    document.querySelector('.collection-thumbnail')
                );

                fillCollectionDescription(
                    collection,
                    document.querySelector('.description')
                );

                document.querySelector('.created span').innerHTML =
                    formatDate(collection.created_at);
                document.querySelector('.updated span').innerHTML =
                    formatDate(collection.updated_at);

                if (collection.shared) {
                    document.querySelector('.shared span').innerHTML =
                        formatDate(collection.shared_at);
                    if (collection.published) {
                        document.querySelector('.published span').innerHTML =
                            formatDate(collection.firstpublished);
                    } else {
                        document.querySelector('.published').hidden = true;
                    }
                } else {
                    document.querySelector('.shared').hidden = true;
                    document.querySelector('.published').hidden = true;
                }

                // Set up all buttons
                document.querySelector('.buttons .share').hidden =
                    collection.shared || !canShare(collection);
                document.querySelector('.buttons .unshare').hidden =
                    !collection.shared || !canShare(collection);
                document.querySelector('.buttons .publish').hidden =
                    (!collection.shared || collection.published) ||
                    !canPublish(collection) || sessionStorage.role === 'banned';
                document.querySelector('.buttons .unpublish').hidden =
                    (!collection.shared || !collection.published) ||
                    !canUnpublish(collection);
                document.querySelector('.buttons .delete').hidden =
                    !canDelete(collection);
                document.querySelector('.add-editor').hidden =
                    !owns(collection);

                document.querySelector('.buttons .share').onclick =
                    function () { confirmShareCollection(collection); };
                document.querySelector('.buttons .unshare').onclick =
                    function () { confirmUnshareCollection(collection); };
                document.querySelector('.buttons .publish').onclick =
                    function () { confirmPublishCollection(collection); };
                document.querySelector('.buttons .unpublish').onclick =
                    function () { confirmUnpublishCollection(collection); }
                document.querySelector('.buttons .delete').onclick =
                    function () { confirmDeleteCollection(collection); }

                document.querySelector('.add-editor').onclick = function () {
                    var newEditorInput = document.querySelector('.new-editor'),
                        addEditorAnchor = this;
                    this.hidden = true;
                    newEditorInput.placeholder = localizer.localize('Username');
                    newEditorInput.value = '';
                    newEditorInput.hidden = false;
                    newEditorInput.classList.add('flash');
                    newEditorInput.focus();
                    newEditorInput.onkeypress = function (event) {
                        var code =
                            (event.keyCode ? event.keyCode : event.which);
                        if (code == 13 && !event.shiftKey) {
                            SnapCloud.addEditorToCollection(
                                collection.creator.username,
                                collection.name,
                                newEditorInput.value,
                                function () {
                                    var li = newEditorLi(newEditorInput.value);
                                    newEditorInput.hidden = true;
                                    newEditorInput.classList.remove('flash');
                                    addEditorAnchor.hidden = false;
                                    document.querySelector('.editor-list')
                                        .append(li);
                                    li.classList.add('flash');
                                },
                                function () {
                                    newEditorInput.value = '';
                                    newEditorInput.classList.remove('flash');
                                    newEditorInput.classList.remove(
                                        'warning-flash');
                                    setTimeout(
                                        function () {
                                            newEditorInput.classList.add(
                                                'warning-flash');
                                        },
                                        10
                                    );
                                    newEditorInput.focus();
                                }
                            );
                        }
                    };
                }

                document.querySelector('.add-editor').title =
                    localizer.localize('Add an editor to this collection');
                document.querySelector('.editor-list').title =
                    localizer.localize('Users who can edit this collection');

                document.querySelector('.editor-list').append(
                    newEditorLi(collection.creator.username));

                function newEditorLi (username) {
                    var editorLi = document.createElement('li'),
                        removeAnchor = document.createElement('a'),
                        icon = document.createElement('i');

                    editorLi.classList.add('editor');
                    editorLi.append(userAnchor(username));

                    if (owns(collection) && username !==
                            collection.creator.username) {
                        icon.classList.add('fas');
                        icon.classList.add('fa-times-circle');
                        removeAnchor.classList.add('remove-editor');
                        removeAnchor.classList.add('clickable');
                        removeAnchor.append(icon);
                        removeAnchor.onclick = function () {
                            SnapCloud.removeEditorFromCollection(
                                collection.creator.username,
                                collection.name,
                                username,
                                function () {
                                    editorLi.classList.add('warning-flash');
                                    setTimeout(
                                        function () {
                                            editorLi.remove();
                                        },
                                        1000
                                    );
                                },
                                genericError
                            ); 
                        };
                        editorLi.append(removeAnchor);
                    }
                    return editorLi;
                };

                if (collection.editors && collection.editors[0]) {
                    collection.editors.forEach(function (editor) {
                        document.querySelector('.editor-list').append(
                            newEditorLi(editor.username));
                    });
                }

            }
            doneLoading('#wrapper');
            document.querySelector('.collection').hidden = false;
        },
        genericError
    );
</script>
