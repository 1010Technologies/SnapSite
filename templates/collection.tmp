<script src="js/dialog.js"></script>
<script src="js/project.js"></script>
<script src="js/inplace.js"></script>
<div hidden class="collection">
    <div class="title">
        <h1></h1>
    </div>
    <div class="contents pure-g">
        <div class="pure-u-7-24 info">
            <div class="pure-g">

                <div class="pure-u-1-2 thumbnail-container"><img class="collection-thumbnail"/></div>

                <span class="pure-u-1-2 dates">
                    <span localizable class="created">Created on </span>.
                    <span localizable class="updated">Last updated on </span><span localizable class="shared">, shared on </span><span localizable class="published"></span>.
                    <span localizable class="is-public">This collection is </span><span localizable class="is-published"></span>.
                </span>
            </div>

            <pre class="description"></pre>

            <div class="editors">
                <ul class="editor-list">
                    <li></li>
                    <a class="clickable add-editor"><i class="fas fa-plus-circle"></i></a>
                </ul>
            </div>

            <div class="buttons">
                <a localizable class="pure-button share" target="_blank">Share</a>
                <a localizable class="pure-button unshare" target="_blank">Unshare</a>
                <a localizable class="pure-button publish" target="_blank">Publish</a>
                <a localizable class="pure-button unpublish" target="_blank">Unpublish</a>
                <a localizable class="pure-button pure-button-warning delete" target="_blank">Delete</a>
            </div>

        </div>
        <!-- just a separator -->
        <i class="pure-u-1-24"></i>
        <div class="pure-u-2-3 projects">
@param pageSize=12
@param query="getCollectionProjects"
@param widgetName="collection_projects"
@param user="getUrlParameter('user')"
@param extraParam="getUrlParameter('collection'),"
@param title="collectionName + ' - Snap! Build Your Own Blocks'"
@param extraOptions="extraFields: { author: 'username', isPublic: 'ispublic', isPublished: 'ispublished' }, withCollectionControls: true"
@param gridSize=4
@include=project_grid
@param extraOptions=''
@param gridSize=''
        </div>
    </div>
</div>
<script>
    var collectionUsername = getUrlParameter('user'),
        collectionName = '${collectionName}' || getUrlParameter('collection'),
        title = document.querySelector('.title h1');

    beganLoading('#wrapper');

    SnapCloud.getCollectionMetadata(
        collectionUsername,
        collectionName,
        function (collection) {
            if (collection.id == 0) {
                // "Flagged" collection
                document.querySelector('.info').remove();
                document.querySelector('.contents').classList.remove('pure-g');
                document.querySelector('.projects').classList.remove('pure-u-2-3');
                document.querySelector('.collection').classList.add('flagged');
            }

            title.innerHTML = collectionName;

            if (collection.id !== 0) {
                if (canRename(collection)) {
                    new InPlaceEditor(
                        title,
                        function () {
                            SnapCloud.updateCollectionName(
                                collectionUsername,
                                collectionName,
                                title.textContent,
                                function () {
                                    location.href = 'collection.html?user=' + collectionUsername + '&collection=' + title.textContent;
                                },
                                genericError
                            );
                        },
                        '' // no default text
                    )
                }

                var thumbnail = document.querySelector('.collection-thumbnail');
                thumbnail.src = collection.thumbnail || '';
                if (!collection.thumbnail) {
                    var i = document.createElement('i');
                    i.classList.add('no-image');
                    i.classList.add('fas');
                    i.classList.add('fa-briefcase');
                    thumbnail.parentNode.appendChild(i);
                }

                document.querySelector('.title').appendChild(authorSpan(collection.creator.username));
                document.querySelector('.description').innerHTML = collection.description || '<small>' + localizer.localize('This collection has no description') + '</small>';

                document.querySelector('.created').append(formatDate(collection.created_at));
                document.querySelector('.updated').append(formatDate(collection.updated_at));

                if (collection.shared) {
                    document.querySelector('.shared').append(formatDate(collection.shared_at));
                    document.querySelector('.is-published').innerHTML += (collection.published ? ' and listed' : ' but unlisted');
                    if (collection.published) {
                        document.querySelector('.published').innerHTML = localizer.localize(', published on ') + formatDate(collection.firstpublished);
                    }
                    document.querySelector('.is-public').innerHTML += ('public');
                } else {
                    document.querySelector('.shared').hidden = true;
                    document.querySelector('.is-public').append('private');
                }

                // Set up all buttons
                document.querySelector('.buttons .share').hidden = collection.shared || !canShare(collection);
                document.querySelector('.buttons .unshare').hidden = !collection.shared || !canShare(collection);
                document.querySelector('.buttons .publish').hidden = (!collection.shared || collection.published) ||
                    !canPublish(collection) || sessionStorage.role === 'banned';
                document.querySelector('.buttons .unpublish').hidden = (!collection.shared || !collection.published) ||
                    !canUnpublish(collection);
                document.querySelector('.buttons .delete').hidden = !canDelete(collection);
                document.querySelector('.add-editor').hidden = !owns(collection);

                document.querySelector('.buttons .share').onclick = function () { confirmShareCollection(collection); };
                document.querySelector('.buttons .unshare').onclick = function () { confirmUnshareCollection(collection); };
                document.querySelector('.buttons .publish').onclick = function () { confirmPublishCollection(collection); };
                document.querySelector('.buttons .unpublish').onclick = function () { confirmUnpublishCollection(collection); }
                document.querySelector('.buttons .delete').onclick = function () { confirmDeleteCollection(collection); }
                document.querySelector('.add-editor').onclick = function () { promptAddEditor(collection); }
                document.querySelector('.add-editor').title = localizer.localize('Add an editor to this collection');
                document.querySelector('.editor-list').title = localizer.localize('Users who can edit this collection');

                document.querySelector('.editor-list li').append(userAnchor(collectionUsername));

                var description = document.querySelector('.description');
                if (canEditDescription(collection)) {
                    new InPlaceEditor(
                        description,
                        function () {
                            SnapCloud.updateCollectionDescription(
                                collectionUsername,
                                collectionName,
                                description.textContent,
                                function () {
                                    if (description.textContent == '') {
                                        description.innerHTML = '<small>' + localizer.localize('This collection has no description') + '</small>';
                                    }
                                },
                                genericError
                            );
                        },
                        'This collection has no description'
                    );
                }
            }
            doneLoading('#wrapper');
            document.querySelector('.collection').hidden = false;
        },
        genericError
    );
</script>
